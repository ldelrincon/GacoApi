// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gaco_api.Models;

#nullable disable

namespace gaco_api.Migrations
{
    [DbContext(typeof(GacoDbContext))]
    [Migration("20241121032520_ActualizacionModelo")]
    partial class ActualizacionModelo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("gaco_api.Models.CatEstatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasDefaultValue("...");

                    b.Property<string>("Estatus")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__CatEstat__3214EC074A7EFB88");

                    b.ToTable("CatEstatuses");
                });

            modelBuilder.Entity("gaco_api.Models.CatGrupoProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasDefaultValue("...");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<int>("IdCatEstatus")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__CatGrupo__3214EC070E632ECA");

                    b.HasIndex("IdCatEstatus");

                    b.ToTable("CatGrupoProductos");
                });

            modelBuilder.Entity("gaco_api.Models.CatTipoSolicitude", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasDefaultValue("...");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCatEstatus")
                        .HasColumnType("int");

                    b.Property<string>("TipoSolicitud")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id")
                        .HasName("PK__CatTipoS__3214EC077D1FFC14");

                    b.HasIndex("IdCatEstatus");

                    b.ToTable("CatTipoSolicitudes");
                });

            modelBuilder.Entity("gaco_api.Models.CatTipoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasDefaultValue("...");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCatEstatus")
                        .HasColumnType("int");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id")
                        .HasName("PK__CatTipoU__3214EC0773A44174");

                    b.HasIndex("IdCatEstatus");

                    b.ToTable("CatTipoUsuarios");
                });

            modelBuilder.Entity("gaco_api.Models.Cliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCatEstatus")
                        .HasColumnType("int");

                    b.Property<string>("Rfc")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("RFC");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id")
                        .HasName("PK__Clientes__3214EC074AD95500");

                    b.HasIndex("IdCatEstatus");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("gaco_api.Models.Evidencia", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCatEstatus")
                        .HasColumnType("int");

                    b.Property<long>("IdSeguimento")
                        .HasColumnType("bigint");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Ruta")
                        .IsRequired()
                        .HasMaxLength(800)
                        .IsUnicode(false)
                        .HasColumnType("varchar(800)");

                    b.HasKey("Id")
                        .HasName("PK__Evidenci__3214EC07887F9876");

                    b.HasIndex("IdCatEstatus");

                    b.HasIndex("IdSeguimento");

                    b.ToTable("Evidencias");
                });

            modelBuilder.Entity("gaco_api.Models.Producto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCatEstatus")
                        .HasColumnType("int");

                    b.Property<int>("IdCatGrupoProducto")
                        .HasColumnType("int");

                    b.Property<string>("Producto1")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("Producto");

                    b.HasKey("Id")
                        .HasName("PK__Producto__3214EC0764646451");

                    b.HasIndex("IdCatEstatus");

                    b.HasIndex("IdCatGrupoProducto");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("gaco_api.Models.RelSeguimentoProducto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCatEstatus")
                        .HasColumnType("int");

                    b.Property<long>("IdProducto")
                        .HasColumnType("bigint");

                    b.Property<long>("IdSeguimento")
                        .HasColumnType("bigint");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK__RelSegui__3214EC0779DF5CCC");

                    b.HasIndex("IdCatEstatus");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdSeguimento");

                    b.HasIndex("IdUsuario");

                    b.ToTable("RelSeguimentoProductos");
                });

            modelBuilder.Entity("gaco_api.Models.ReporteServicio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCatEstatus")
                        .HasColumnType("int");

                    b.Property<int>("IdCatSolicitud")
                        .HasColumnType("int");

                    b.Property<long>("IdCliente")
                        .HasColumnType("bigint");

                    b.Property<long>("IdUsuarioCreacion")
                        .HasColumnType("bigint");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id")
                        .HasName("PK__ReporteS__3214EC07B6BCABCD");

                    b.HasIndex("IdCatEstatus");

                    b.HasIndex("IdCatSolicitud");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdUsuarioCreacion");

                    b.ToTable("ReporteServicios");
                });

            modelBuilder.Entity("gaco_api.Models.Seguimento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCatEstatus")
                        .HasColumnType("int");

                    b.Property<long>("IdReporteServicio")
                        .HasColumnType("bigint");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("bigint");

                    b.Property<string>("Seguimento1")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Seguimento");

                    b.HasKey("Id")
                        .HasName("PK__Seguimen__3214EC07BB752A16");

                    b.HasIndex("IdCatEstatus");

                    b.HasIndex("IdReporteServicio");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Seguimentos");
                });

            modelBuilder.Entity("gaco_api.Models.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<bool>("CorreoConfirmado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCatEstatus")
                        .HasColumnType("int");

                    b.Property<int>("IdCatTipoUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id")
                        .HasName("PK__Usuarios__3214EC07E8DEE2CB");

                    b.HasIndex("IdCatEstatus");

                    b.HasIndex("IdCatTipoUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("gaco_api.Models.CatGrupoProducto", b =>
                {
                    b.HasOne("gaco_api.Models.CatEstatus", "IdCatEstatusNavigation")
                        .WithMany("CatGrupoProductos")
                        .HasForeignKey("IdCatEstatus")
                        .IsRequired()
                        .HasConstraintName("FK_CatGrupoProductos_CatEstatuses_Id");

                    b.Navigation("IdCatEstatusNavigation");
                });

            modelBuilder.Entity("gaco_api.Models.CatTipoSolicitude", b =>
                {
                    b.HasOne("gaco_api.Models.CatEstatus", "IdCatEstatusNavigation")
                        .WithMany("CatTipoSolicitudes")
                        .HasForeignKey("IdCatEstatus")
                        .IsRequired()
                        .HasConstraintName("FK_CatTipoSolicitudes_CatEstatuses_Id");

                    b.Navigation("IdCatEstatusNavigation");
                });

            modelBuilder.Entity("gaco_api.Models.CatTipoUsuario", b =>
                {
                    b.HasOne("gaco_api.Models.CatEstatus", "IdCatEstatusNavigation")
                        .WithMany("CatTipoUsuarios")
                        .HasForeignKey("IdCatEstatus")
                        .IsRequired()
                        .HasConstraintName("FK_CatTipoUsuarios_CatEstatuses_Id");

                    b.Navigation("IdCatEstatusNavigation");
                });

            modelBuilder.Entity("gaco_api.Models.Cliente", b =>
                {
                    b.HasOne("gaco_api.Models.CatEstatus", "IdCatEstatusNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("IdCatEstatus")
                        .IsRequired()
                        .HasConstraintName("FK_Clientes_CatEstatuses_Id");

                    b.Navigation("IdCatEstatusNavigation");
                });

            modelBuilder.Entity("gaco_api.Models.Evidencia", b =>
                {
                    b.HasOne("gaco_api.Models.CatEstatus", "IdCatEstatusNavigation")
                        .WithMany("Evidencia")
                        .HasForeignKey("IdCatEstatus")
                        .IsRequired()
                        .HasConstraintName("FK_Evidencias_CatEstatuses_Id");

                    b.HasOne("gaco_api.Models.Seguimento", "IdSeguimentoNavigation")
                        .WithMany("Evidencia")
                        .HasForeignKey("IdSeguimento")
                        .IsRequired()
                        .HasConstraintName("FK_Evidencias_Seguimentos_Id");

                    b.Navigation("IdCatEstatusNavigation");

                    b.Navigation("IdSeguimentoNavigation");
                });

            modelBuilder.Entity("gaco_api.Models.Producto", b =>
                {
                    b.HasOne("gaco_api.Models.CatEstatus", "IdCatEstatusNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdCatEstatus")
                        .IsRequired()
                        .HasConstraintName("FK_Productos_CatEstatuses_Id");

                    b.HasOne("gaco_api.Models.CatGrupoProducto", "IdCatGrupoProductoNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdCatGrupoProducto")
                        .IsRequired()
                        .HasConstraintName("FK_Productos_CatGrupoProductos_Id");

                    b.Navigation("IdCatEstatusNavigation");

                    b.Navigation("IdCatGrupoProductoNavigation");
                });

            modelBuilder.Entity("gaco_api.Models.RelSeguimentoProducto", b =>
                {
                    b.HasOne("gaco_api.Models.CatEstatus", "IdCatEstatusNavigation")
                        .WithMany("RelSeguimentoProductos")
                        .HasForeignKey("IdCatEstatus")
                        .IsRequired()
                        .HasConstraintName("FK_RelSeguimentoProductos_CatEstatuses_Id");

                    b.HasOne("gaco_api.Models.Producto", "IdProductoNavigation")
                        .WithMany("RelSeguimentoProductos")
                        .HasForeignKey("IdProducto")
                        .IsRequired()
                        .HasConstraintName("FK_RelSeguimentoProductos_Productos_Id");

                    b.HasOne("gaco_api.Models.Seguimento", "IdSeguimentoNavigation")
                        .WithMany("RelSeguimentoProductos")
                        .HasForeignKey("IdSeguimento")
                        .IsRequired()
                        .HasConstraintName("FK_RelSeguimentoProductos_Seguimentos_Id");

                    b.HasOne("gaco_api.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("RelSeguimentoProductos")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_RelSeguimentoProductos_Usuarios_Id");

                    b.Navigation("IdCatEstatusNavigation");

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdSeguimentoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("gaco_api.Models.ReporteServicio", b =>
                {
                    b.HasOne("gaco_api.Models.CatEstatus", "IdCatEstatusNavigation")
                        .WithMany("ReporteServicios")
                        .HasForeignKey("IdCatEstatus")
                        .IsRequired()
                        .HasConstraintName("FK_ReporteServicios_CatEstatuses_Id");

                    b.HasOne("gaco_api.Models.CatTipoSolicitude", "IdCatSolicitudNavigation")
                        .WithMany("ReporteServicios")
                        .HasForeignKey("IdCatSolicitud")
                        .IsRequired()
                        .HasConstraintName("FK_ReporteServicios_CatTipoSolicitudes_Id");

                    b.HasOne("gaco_api.Models.Cliente", "IdClienteNavigation")
                        .WithMany("ReporteServicios")
                        .HasForeignKey("IdCliente")
                        .IsRequired()
                        .HasConstraintName("FK_ReporteServicios_Clientes_Id");

                    b.HasOne("gaco_api.Models.Usuario", "IdUsuarioCreacionNavigation")
                        .WithMany("ReporteServicios")
                        .HasForeignKey("IdUsuarioCreacion")
                        .IsRequired()
                        .HasConstraintName("FK_ReporteServicios_Usuarios_Id");

                    b.Navigation("IdCatEstatusNavigation");

                    b.Navigation("IdCatSolicitudNavigation");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdUsuarioCreacionNavigation");
                });

            modelBuilder.Entity("gaco_api.Models.Seguimento", b =>
                {
                    b.HasOne("gaco_api.Models.CatEstatus", "IdCatEstatusNavigation")
                        .WithMany("Seguimentos")
                        .HasForeignKey("IdCatEstatus")
                        .IsRequired()
                        .HasConstraintName("FK_Seguimentos_CatEstatuses_Id");

                    b.HasOne("gaco_api.Models.ReporteServicio", "IdReporteServicioNavigation")
                        .WithMany("Seguimentos")
                        .HasForeignKey("IdReporteServicio")
                        .IsRequired()
                        .HasConstraintName("FK_Seguimentos_ReporteServicios_Id");

                    b.HasOne("gaco_api.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Seguimentos")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_Seguimentos_Usuarios_Id");

                    b.Navigation("IdCatEstatusNavigation");

                    b.Navigation("IdReporteServicioNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("gaco_api.Models.Usuario", b =>
                {
                    b.HasOne("gaco_api.Models.CatEstatus", "IdCatEstatusNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdCatEstatus")
                        .IsRequired()
                        .HasConstraintName("FK_Usuarios_CatEstatuses_Id");

                    b.HasOne("gaco_api.Models.CatTipoUsuario", "IdCatTipoUsuarioNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdCatTipoUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_Usuarios_CatTipoUsuarios_Id");

                    b.Navigation("IdCatEstatusNavigation");

                    b.Navigation("IdCatTipoUsuarioNavigation");
                });

            modelBuilder.Entity("gaco_api.Models.CatEstatus", b =>
                {
                    b.Navigation("CatGrupoProductos");

                    b.Navigation("CatTipoSolicitudes");

                    b.Navigation("CatTipoUsuarios");

                    b.Navigation("Clientes");

                    b.Navigation("Evidencia");

                    b.Navigation("Productos");

                    b.Navigation("RelSeguimentoProductos");

                    b.Navigation("ReporteServicios");

                    b.Navigation("Seguimentos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("gaco_api.Models.CatGrupoProducto", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("gaco_api.Models.CatTipoSolicitude", b =>
                {
                    b.Navigation("ReporteServicios");
                });

            modelBuilder.Entity("gaco_api.Models.CatTipoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("gaco_api.Models.Cliente", b =>
                {
                    b.Navigation("ReporteServicios");
                });

            modelBuilder.Entity("gaco_api.Models.Producto", b =>
                {
                    b.Navigation("RelSeguimentoProductos");
                });

            modelBuilder.Entity("gaco_api.Models.ReporteServicio", b =>
                {
                    b.Navigation("Seguimentos");
                });

            modelBuilder.Entity("gaco_api.Models.Seguimento", b =>
                {
                    b.Navigation("Evidencia");

                    b.Navigation("RelSeguimentoProductos");
                });

            modelBuilder.Entity("gaco_api.Models.Usuario", b =>
                {
                    b.Navigation("RelSeguimentoProductos");

                    b.Navigation("ReporteServicios");

                    b.Navigation("Seguimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
